{"ast":null,"code":"var _jsxFileName = \"/home/geff/Documentos/exercicio-aula/14.2/react-and-mock/react-and-mock-inicial/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport CharacterCard from './components/CharacterCard';\nimport Loading from './components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCharacters = async () => {\n      const endpoint = 'https://rickandmortyapi.com/api/character';\n      const {\n        results\n      } = await fetch(endpoint).then(response => response.json());\n      this.setState({\n        isLoading: false,\n        characters: results,\n        filteredCharacters: results\n      });\n    };\n\n    this.handleOnChange = _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleFilterCharacters = () => {\n      const {\n        characters,\n        search\n      } = this.state;\n      const filteredArray = characters.filter(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name.toUpperCase().includes(search.toUpperCase());\n      });\n      this.setState({\n        filteredCharacters: filteredArray\n      });\n    };\n\n    this.state = {\n      characters: [],\n      filteredCharacters: [],\n      isLoading: true,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  render() {\n    const {\n      filteredCharacters,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Rick Sanches...\",\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleFilterCharacters,\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"card-list\",\n        children: filteredCharacters.map(item => /*#__PURE__*/_jsxDEV(CharacterCard, {\n          character: item\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/geff/Documentos/exercicio-aula/14.2/react-and-mock/react-and-mock-inicial/src/App.js"],"names":["React","CharacterCard","Loading","App","Component","constructor","props","getCharacters","endpoint","results","fetch","then","response","json","setState","isLoading","characters","filteredCharacters","handleOnChange","target","value","search","handleFilterCharacters","state","filteredArray","filter","name","toUpperCase","includes","componentDidMount","render","map","item","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,aATkB,GASF,YAAY;AAC1B,YAAMC,QAAQ,GAAG,2CAAjB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAY,MAAMC,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjC,CAAxB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC,KAAX;AAAkBC,QAAAA,UAAU,EAACP,OAA7B;AAAsCQ,QAAAA,kBAAkB,EAACR;AAAzD,OAAd;AACD,KAbiB;;AAAA,SAoBlBS,cApBkB,GAoBD,QAAsB;AAAA,UAArB;AAACC,QAAAA,MAAM,EAAC;AAACC,UAAAA;AAAD;AAAR,OAAqB;AACrC,WAAKN,QAAL,CAAc;AAACO,QAAAA,MAAM,EAACD;AAAR,OAAd;AACD,KAtBiB;;AAAA,SAwBlBE,sBAxBkB,GAwBO,MAAM;AAC7B,YAAM;AAAEN,QAAAA,UAAF;AAAcK,QAAAA;AAAd,UAAwB,KAAKE,KAAnC;AACA,YAAMC,aAAa,GAAGR,UAAU,CAACS,MAAX,CAAkB;AAAA,YAAC;AAACC,UAAAA;AAAD,SAAD;AAAA,eAAWA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BP,MAAM,CAACM,WAAP,EAA5B,CAAX;AAAA,OAAlB,CAAtB;AACA,WAAKb,QAAL,CAAc;AAACG,QAAAA,kBAAkB,EAACO;AAApB,OAAd;AACD,KA5BiB;;AAEhB,SAAKD,KAAL,GAAW;AACTP,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,kBAAkB,EAAC,EAFV;AAGTF,MAAAA,SAAS,EAAC,IAHD;AAITM,MAAAA,MAAM,EAAC;AAJE,KAAX;AAMD;;AAQDQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKtB,aAAL;AACD;;AAYDuB,EAAAA,MAAM,GAAE;AACN,UAAM;AAACb,MAAAA,kBAAD;AAAqBF,MAAAA;AAArB,QAAkC,KAAKQ,KAA7C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,iBAA/B;AAAiD,UAAA,QAAQ,EAAE,KAAKL;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKI,sBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMIP,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBACT;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,kBACGE,kBAAkB,CAACc,GAAnB,CAAuBC,IAAI,iBAAG,QAAC,aAAD;AAAe,UAAA,SAAS,EAAEA;AAA1B,WAAqCC,IAAI,CAACC,MAAL,EAArC;AAAA;AAAA;AAAA;AAAA,gBAA9B;AADH;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA/C+B;;AAkDlC,eAAe/B,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport CharacterCard from './components/CharacterCard';\nimport Loading from './components/Loading';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      characters:[],\n      filteredCharacters:[],\n      isLoading:true,\n      search:''\n    }\n  }\n  getCharacters = async () => {\n    const endpoint = 'https://rickandmortyapi.com/api/character';\n    const {results} = await fetch(endpoint).then(response => response.json())\n    this.setState({isLoading:false, characters:results, filteredCharacters:results})\n  }\n\n\n  componentDidMount(){\n    this.getCharacters()\n  }\n\n  handleOnChange = ({target:{value}}) => {\n    this.setState({search:value})\n  }\n\n  handleFilterCharacters = () => {\n    const { characters, search} = this.state;\n    const filteredArray = characters.filter(({name})=> name.toUpperCase().includes(search.toUpperCase()))\n    this.setState({filteredCharacters:filteredArray})\n  }\n\n  render(){\n    const {filteredCharacters, isLoading} = this.state\n    return (\n      <div className=\"App\">\n        <form>\n          <input type='text' placeholder='Rick Sanches...' onChange={this.handleOnChange}/>\n          <button type='button' onClick={this.handleFilterCharacters}>Buscar</button>\n        </form>\n        {\n          isLoading ? <Loading/> : \n          <section className='card-list'>\n            {filteredCharacters.map(item=> <CharacterCard character={item} key={Math.random()} />)}\n          </section>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}