{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define('PropTypes', ['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.PropTypes = mod.exports;\n  }\n})(this, function (exports) {\n  /**\n   * Copyright 2013-2015, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   *\n   * @providesModule ReactPropTypes\n   */\n  'use strict'; // The Symbol used to tag the ReactElement type. If there is no native Symbol\n  // nor polyfill, then a plain number is used for performance.\n\n  exports.__esModule = true;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n  var ReactElement = {};\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid component.\n   * @final\n   */\n\n  ReactElement.isValidElement = function (object) {\n    return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  var ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n  var emptyFunction = {\n    thatReturns: function thatReturns(what) {\n      return function () {\n        return what;\n      };\n    }\n  };\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>';\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  function createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (props[propName] == null) {\n        var locationName = ReactPropTypeLocationNames[location];\n\n        if (isRequired) {\n          return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        var locationName = ReactPropTypeLocationNames[location]; // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n\n        var preciseType = getPreciseType(propValue);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturns(null));\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var locationName = ReactPropTypeLocationNames[location];\n        var propType = getPropType(propValue);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!ReactElement.isValidElement(props[propName])) {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var locationName = ReactPropTypeLocationNames[location];\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      return createChainableTypeChecker(function () {\n        return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n      });\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (propValue === expectedValues[i]) {\n          return null;\n        }\n      }\n\n      var locationName = ReactPropTypeLocationNames[location];\n      var valuesString = JSON.stringify(expectedValues);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      return createChainableTypeChecker(function () {\n        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n      });\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName) == null) {\n          return null;\n        }\n      }\n\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || ReactElement.isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  exports.default = ReactPropTypes;\n});","map":{"version":3,"sources":["src/index.js"],"names":["REACT_ELEMENT_TYPE","Symbol","ReactElement","object","ReactPropTypeLocationNames","prop","context","childContext","emptyFunction","thatReturns","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","iteratorFn","maybeIterable","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bool","func","number","string","symbol","any","createAnyTypeChecker","arrayOf","element","createElementTypeChecker","instanceOf","node","createNodeChecker","objectOf","oneOf","oneOfType","shape","createShapeTypeChecker","componentName","propFullName","props","locationName","validate","chainedCheckType","checkType","propValue","propType","getPropType","preciseType","getPreciseType","createChainableTypeChecker","Array","i","error","typeChecker","expectedClassName","expectedClass","actualClassName","getClassName","expectedValues","valuesString","JSON","arrayOfTypeCheckers","checker","isNode","shapeTypes","getIteratorFn","iterator","step","entry","isSymbol"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE =\n  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) ||\n  0xeac7;\n\nvar ReactElement = {};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n};\n\nvar ReactPropTypeLocationNames = {\n  prop: 'prop',\n  context: 'context',\n  childContext: 'child context',\n};\n\n\n\n\nvar emptyFunction = {\n  thatReturns: function(what) {\n    return function(){ return what; };\n  }\n};\n\n\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL]\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\n\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker,\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location,\n    propFullName\n  ) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          `Required ${locationName} \\`${propFullName}\\` was not specified in ` +\n          `\\`${componentName}\\`.`\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${preciseType}\\` supplied to \\`${componentName}\\`, expected ` +\n        `\\`${expectedType}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an array.`\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(\n        propValue,\n        i,\n        componentName,\n        location,\n        `${propFullName}[${i}]`\n      );\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a single ReactElement.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${actualClassName}\\` supplied to \\`${componentName}\\`, expected ` +\n        `instance of \\`${expectedClassName}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOf, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` of value \\`${propValue}\\` ` +\n      `supplied to \\`${componentName}\\`, expected one of ${valuesString}.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an object.`\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(\n          propValue,\n          key,\n          componentName,\n          location,\n          `${propFullName}.${key}`\n        );\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOfType, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (\n        checker(props, propName, componentName, location, propFullName) == null\n      ) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n      `\\`${componentName}\\`.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a ReactNode.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type \\`${propType}\\` ` +\n        `supplied to \\`${componentName}\\`, expected \\`object\\`.`\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(\n        propValue,\n        key,\n        componentName,\n        location,\n        `${propFullName}.${key}`\n      );\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nexport default ReactPropTypes;\n"]},"metadata":{},"sourceType":"script"}